# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.31
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _libweb100
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


NULL = _libweb100.NULL
WEB100_TYPE_INTEGER = _libweb100.WEB100_TYPE_INTEGER
WEB100_TYPE_INTEGER32 = _libweb100.WEB100_TYPE_INTEGER32
WEB100_TYPE_INET_ADDRESS_IPV4 = _libweb100.WEB100_TYPE_INET_ADDRESS_IPV4
WEB100_TYPE_IP_ADDRESS = _libweb100.WEB100_TYPE_IP_ADDRESS
WEB100_TYPE_COUNTER32 = _libweb100.WEB100_TYPE_COUNTER32
WEB100_TYPE_GAUGE32 = _libweb100.WEB100_TYPE_GAUGE32
WEB100_TYPE_UNSIGNED32 = _libweb100.WEB100_TYPE_UNSIGNED32
WEB100_TYPE_TIME_TICKS = _libweb100.WEB100_TYPE_TIME_TICKS
WEB100_TYPE_COUNTER64 = _libweb100.WEB100_TYPE_COUNTER64
WEB100_TYPE_INET_PORT_NUMBER = _libweb100.WEB100_TYPE_INET_PORT_NUMBER
WEB100_TYPE_UNSIGNED16 = _libweb100.WEB100_TYPE_UNSIGNED16
WEB100_TYPE_INET_ADDRESS = _libweb100.WEB100_TYPE_INET_ADDRESS
WEB100_TYPE_INET_ADDRESS_IPV6 = _libweb100.WEB100_TYPE_INET_ADDRESS_IPV6
WEB100_TYPE_STR32 = _libweb100.WEB100_TYPE_STR32
WEB100_TYPE_OCTET = _libweb100.WEB100_TYPE_OCTET
WEB100_ADDRTYPE_UNKNOWN = _libweb100.WEB100_ADDRTYPE_UNKNOWN
WEB100_ADDRTYPE_IPV4 = _libweb100.WEB100_ADDRTYPE_IPV4
WEB100_ADDRTYPE_IPV6 = _libweb100.WEB100_ADDRTYPE_IPV6
WEB100_ADDRTYPE_DNS = _libweb100.WEB100_ADDRTYPE_DNS
class web100_connection_spec(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, web100_connection_spec, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, web100_connection_spec, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dst_port"] = _libweb100.web100_connection_spec_dst_port_set
    __swig_getmethods__["dst_port"] = _libweb100.web100_connection_spec_dst_port_get
    if _newclass:dst_port = _swig_property(_libweb100.web100_connection_spec_dst_port_get, _libweb100.web100_connection_spec_dst_port_set)
    __swig_setmethods__["dst_addr"] = _libweb100.web100_connection_spec_dst_addr_set
    __swig_getmethods__["dst_addr"] = _libweb100.web100_connection_spec_dst_addr_get
    if _newclass:dst_addr = _swig_property(_libweb100.web100_connection_spec_dst_addr_get, _libweb100.web100_connection_spec_dst_addr_set)
    __swig_setmethods__["src_port"] = _libweb100.web100_connection_spec_src_port_set
    __swig_getmethods__["src_port"] = _libweb100.web100_connection_spec_src_port_get
    if _newclass:src_port = _swig_property(_libweb100.web100_connection_spec_src_port_get, _libweb100.web100_connection_spec_src_port_set)
    __swig_setmethods__["src_addr"] = _libweb100.web100_connection_spec_src_addr_set
    __swig_getmethods__["src_addr"] = _libweb100.web100_connection_spec_src_addr_get
    if _newclass:src_addr = _swig_property(_libweb100.web100_connection_spec_src_addr_get, _libweb100.web100_connection_spec_src_addr_set)
    def __init__(self, *args): 
        this = _libweb100.new_web100_connection_spec(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libweb100.delete_web100_connection_spec
    __del__ = lambda self : None;
web100_connection_spec_swigregister = _libweb100.web100_connection_spec_swigregister
web100_connection_spec_swigregister(web100_connection_spec)

class web100_connection_spec_v6(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, web100_connection_spec_v6, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, web100_connection_spec_v6, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dst_port"] = _libweb100.web100_connection_spec_v6_dst_port_set
    __swig_getmethods__["dst_port"] = _libweb100.web100_connection_spec_v6_dst_port_get
    if _newclass:dst_port = _swig_property(_libweb100.web100_connection_spec_v6_dst_port_get, _libweb100.web100_connection_spec_v6_dst_port_set)
    __swig_setmethods__["dst_addr"] = _libweb100.web100_connection_spec_v6_dst_addr_set
    __swig_getmethods__["dst_addr"] = _libweb100.web100_connection_spec_v6_dst_addr_get
    if _newclass:dst_addr = _swig_property(_libweb100.web100_connection_spec_v6_dst_addr_get, _libweb100.web100_connection_spec_v6_dst_addr_set)
    __swig_setmethods__["src_port"] = _libweb100.web100_connection_spec_v6_src_port_set
    __swig_getmethods__["src_port"] = _libweb100.web100_connection_spec_v6_src_port_get
    if _newclass:src_port = _swig_property(_libweb100.web100_connection_spec_v6_src_port_get, _libweb100.web100_connection_spec_v6_src_port_set)
    __swig_setmethods__["src_addr"] = _libweb100.web100_connection_spec_v6_src_addr_set
    __swig_getmethods__["src_addr"] = _libweb100.web100_connection_spec_v6_src_addr_get
    if _newclass:src_addr = _swig_property(_libweb100.web100_connection_spec_v6_src_addr_get, _libweb100.web100_connection_spec_v6_src_addr_set)
    def __init__(self, *args): 
        this = _libweb100.new_web100_connection_spec_v6(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libweb100.delete_web100_connection_spec_v6
    __del__ = lambda self : None;
web100_connection_spec_v6_swigregister = _libweb100.web100_connection_spec_v6_swigregister
web100_connection_spec_v6_swigregister(web100_connection_spec_v6)

WEB100_AGENT_TYPE_LOCAL = _libweb100.WEB100_AGENT_TYPE_LOCAL
WEB100_AGENT_TYPE_LOG = _libweb100.WEB100_AGENT_TYPE_LOG
WEB100_VERSTR_LEN_MAX = _libweb100.WEB100_VERSTR_LEN_MAX
WEB100_GROUPNAME_LEN_MAX = _libweb100.WEB100_GROUPNAME_LEN_MAX
WEB100_VARNAME_LEN_MAX = _libweb100.WEB100_VARNAME_LEN_MAX
WEB100_ERR_SUCCESS = _libweb100.WEB100_ERR_SUCCESS
WEB100_ERR_FILE = _libweb100.WEB100_ERR_FILE
WEB100_ERR_AGENT_TYPE = _libweb100.WEB100_ERR_AGENT_TYPE
WEB100_ERR_NOMEM = _libweb100.WEB100_ERR_NOMEM
WEB100_ERR_NOCONNECTION = _libweb100.WEB100_ERR_NOCONNECTION
WEB100_ERR_INVAL = _libweb100.WEB100_ERR_INVAL
WEB100_ERR_HEADER = _libweb100.WEB100_ERR_HEADER
WEB100_ERR_NOVAR = _libweb100.WEB100_ERR_NOVAR
WEB100_ERR_NOGROUP = _libweb100.WEB100_ERR_NOGROUP
WEB100_ERR_SOCK = _libweb100.WEB100_ERR_SOCK
WEB100_ERR_KERNVER = _libweb100.WEB100_ERR_KERNVER
web100_perror = _libweb100.web100_perror
web100_strerror = _libweb100.web100_strerror
web100_attach = _libweb100.web100_attach
web100_detach = _libweb100.web100_detach
web100_agent_find_var_and_group = _libweb100.web100_agent_find_var_and_group
web100_group_head = _libweb100.web100_group_head
web100_group_next = _libweb100.web100_group_next
web100_group_find = _libweb100.web100_group_find
web100_var_head = _libweb100.web100_var_head
web100_var_next = _libweb100.web100_var_next
web100_var_find = _libweb100.web100_var_find
web100_connection_head = _libweb100.web100_connection_head
web100_connection_next = _libweb100.web100_connection_next
web100_connection_find = _libweb100.web100_connection_find
web100_connection_find_v6 = _libweb100.web100_connection_find_v6
web100_connection_lookup = _libweb100.web100_connection_lookup
web100_connection_from_socket = _libweb100.web100_connection_from_socket
web100_connection_data_copy = _libweb100.web100_connection_data_copy
web100_connection_new_local_copy = _libweb100.web100_connection_new_local_copy
web100_connection_free_local_copy = _libweb100.web100_connection_free_local_copy
web100_snapshot_alloc = _libweb100.web100_snapshot_alloc
web100_snapshot_free = _libweb100.web100_snapshot_free
web100_snap = _libweb100.web100_snap
web100_raw_read = _libweb100.web100_raw_read
web100_raw_write = _libweb100.web100_raw_write
web100_snap_read = _libweb100.web100_snap_read
web100_delta_any = _libweb100.web100_delta_any
web100_snap_data_copy = _libweb100.web100_snap_data_copy
web100_value_to_text = _libweb100.web100_value_to_text
web100_value_to_textn = _libweb100.web100_value_to_textn
web100_get_agent_type = _libweb100.web100_get_agent_type
web100_get_agent_version = _libweb100.web100_get_agent_version
web100_get_group_name = _libweb100.web100_get_group_name
web100_get_group_size = _libweb100.web100_get_group_size
web100_get_group_nvars = _libweb100.web100_get_group_nvars
web100_get_var_name = _libweb100.web100_get_var_name
web100_get_var_type = _libweb100.web100_get_var_type
web100_get_var_size = _libweb100.web100_get_var_size
web100_get_snap_group = _libweb100.web100_get_snap_group
web100_get_snap_group_name = _libweb100.web100_get_snap_group_name
web100_get_connection_cid = _libweb100.web100_get_connection_cid
web100_get_connection_addrtype = _libweb100.web100_get_connection_addrtype
web100_get_connection_spec = _libweb100.web100_get_connection_spec
web100_get_connection_spec_v6 = _libweb100.web100_get_connection_spec_v6
web100_log_open_write = _libweb100.web100_log_open_write
web100_log_close_write = _libweb100.web100_log_close_write
web100_log_write = _libweb100.web100_log_write
web100_log_open_read = _libweb100.web100_log_open_read
web100_log_close_read = _libweb100.web100_log_close_read
web100_snapshot_alloc_from_log = _libweb100.web100_snapshot_alloc_from_log
web100_snap_from_log = _libweb100.web100_snap_from_log
web100_get_log_agent = _libweb100.web100_get_log_agent
web100_get_log_group = _libweb100.web100_get_log_group
web100_get_log_connection = _libweb100.web100_get_log_connection
web100_get_log_time = _libweb100.web100_get_log_time
web100_log_eof = _libweb100.web100_log_eof
new_u16p = _libweb100.new_u16p
copy_u16p = _libweb100.copy_u16p
delete_u16p = _libweb100.delete_u16p
u16p_assign = _libweb100.u16p_assign
u16p_value = _libweb100.u16p_value
new_s32p = _libweb100.new_s32p
copy_s32p = _libweb100.copy_s32p
delete_s32p = _libweb100.delete_s32p
s32p_assign = _libweb100.s32p_assign
s32p_value = _libweb100.s32p_value
new_u32p = _libweb100.new_u32p
copy_u32p = _libweb100.copy_u32p
delete_u32p = _libweb100.delete_u32p
u32p_assign = _libweb100.u32p_assign
u32p_value = _libweb100.u32p_value
new_u64p = _libweb100.new_u64p
copy_u64p = _libweb100.copy_u64p
delete_u64p = _libweb100.delete_u64p
u64p_assign = _libweb100.u64p_assign
u64p_value = _libweb100.u64p_value
new_bufp = _libweb100.new_bufp
copy_bufp = _libweb100.copy_bufp
delete_bufp = _libweb100.delete_bufp
bufp_assign = _libweb100.bufp_assign
bufp_value = _libweb100.bufp_value
bufp_to_u16p = _libweb100.bufp_to_u16p
bufp_to_s32p = _libweb100.bufp_to_s32p
bufp_to_u32p = _libweb100.bufp_to_u32p
bufp_to_u64p = _libweb100.bufp_to_u64p
str_to_bufp = _libweb100.str_to_bufp

cvar = _libweb100.cvar
web100_sys_errlist = cvar.web100_sys_errlist

